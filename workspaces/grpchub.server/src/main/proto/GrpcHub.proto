// Copyright 2015, Google Inc.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
// notice, this list of conditions and the following disclaimer.
//     * Redistributions in binary form must reproduce the above
// copyright notice, this list of conditions and the following disclaimer
// in the documentation and/or other materials provided with the
// distribution.
//     * Neither the name of Google Inc. nor the names of its
// contributors may be used to endorse or promote products derived from
// this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY https://www.smart-office.co.kr 
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.wooribank.smarthub.grpchub";
option java_outer_classname = "GrpcHubProto";
option objc_class_prefix = "HLW";

package GrpcHub;

enum MessageType{
	CREDENTIAL_ZERO = 0;
	CREDENTIAL_TYPE_LIST_TO_AGENT = 1;
	CREDENTIAL_TYPE_LIST_TO_WAS = 2;
	CREDENTIAL_FIELD_LIST_TO_AGENT = 3;
	CREDENTIAL_FIELD_LIST_TO_WAS = 4;
	CREDENTIAL_REQUEST_TO_AGENT = 5;
	CREDENTIAL_REQUEST_TO_WAS = 6;
	QRCODE_REQUEST_TO_AGENT = 7;
	CREDENTIAL_PRESENT_TO_AGENT = 8;
	CREDENTIAL_PRESENT_TO_WAS = 9;
	CREDENTIAL_REQUEST_TO_BAS = 10;	
}

enum Status {
  SUCCESS = 0;
  ERROR = 1;
}

service GrpcHub {
  	rpc Process(ProcessRequest) returns (ProcessResponse) {}
}

// The request message. Extend if it is necessary.
message ProcessRequest {
  int32	 requestType = 1;     // Header types 0-10000 are reserved and defined by MessageType
  string args = 2;
  bytes document = 3;
}

message ProcessResponse {
  // status code
  int32 status = 1;
  
  // error message
  string message = 2;
  
  // payload data
  bytes payload = 3;
}
